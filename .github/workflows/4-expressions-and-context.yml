name: Expressions & Context
on:
  push:
  workflow_dispatch:

jobs:
  context-explorer:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: '18'
      BUILD_ENV: 'development'
      APP_NAME: 'TestApp'
    steps:
      - name: GitHub Context Information
        run: |
          echo "=== GitHub Context ==="
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Triggered by: ${{ github.actor }}"
          echo "Event type: ${{ github.event_name }}"
          echo "Run number: ${{ github.run_number }}"
          echo "Workflow name: ${{ github.workflow }}"
      - name: Runner Environment Information
        run: |
          echo "=== Runner Environment ==="
          echo "Operating System: ${{ runner.os }}"
          echo "Architecture: ${{ runner.arch }}"
          echo "Runner name: ${{ runner.name }}"
          echo "Tool cache directory: ${{ runner.tool_cache }}"
          echo "Temporary directory: ${{ runner.temp }}"
      - name: Environment Variables Test
        run: |
          echo "=== Environment Variables ==="
          echo "Node version from env: ${{ env.NODE_VERSION }}"
          echo "Build environment: ${{ env.BUILD_ENV }}"
          echo "Application name: ${{ env.APP_NAME }}"
          echo "System PATH exists: ${{ env.PATH != '' }}"
          echo "Home directory: ${{ env.HOME }}"
      - name: Secrets Context Test
        env:
          TEST_API_KEY: "key"
          DATABASE_URL: "db url"
        run: |
          echo "=== Secrets Availability Check ==="
          echo "Has TEST_API_KEY secret: ${{ secrets.TEST_API_KEY != '' }}"
          echo "Has DATABASE_URL secret: ${{ secrets.DATABASE_URL != '' }}"
          echo "TEST_API_KEY env: ${{ env.TEST_API_KEY }}"
          echo "DATABASE_URL env: ${{ env.DATABASE_URL }}"
          echo "API key configured: ${{ secrets.TEST_API_KEY != '' && 'YES' || 'NO' }}"
          echo "Database URL starts with 'postgresql': ${{ startsWith(secrets.DATABASE_URL, 'postgresql') }}"

  logic-operations:
    needs: context-explorer
    runs-on: ubuntu-latest
    steps:
      - name: Main branch only
        if: ${{ github.ref_name == 'main' }}
        run: echo "This is the main branch - Production mode"

      - name: Feature/* branch only
        if: ${{ startsWith(github.ref_name, 'feature/') }}
        run: echo "This is a feature branch - Development mode"

      - name: Other branches
        if: ${{ github.ref_name != 'main' && !startsWith(github.ref_name, 'feature/') }}
        run: echo "This is another type of branch - Testing mode"

      - name: Linux step
        if: ${{ runner.os == 'Linux' }}
        run: |
          echo "üêß Running on Linux - using apt package manager"
          echo "Linux runner detected: ${{ runner.os }}"

      - name: macOS step
        if: ${{ runner.os == 'macOS' }}
        run: |
          echo "üçé Running on macOS - using homebrew package manager"
          echo "macOS runner detected: ${{ runner.os }}"

      - name: Windows step
        if: ${{ runner.os == 'Windows' }}
        run: |
          echo "ü™ü Running on Windows - using chocolatey package manager"
          echo "Windows runner detected: ${{ runner.os }}"

      - name: String functions
        run: |
          echo "=== String Transformations ==="
          echo "Original ref: ${{ github.ref }}"
          echo "Clean branch name: ${{ replace(github.ref, 'refs/heads/', '') }}"
          echo "Uppercase branch: ${{ upper(github.ref_name) }}"
          echo "Lowercase branch: ${{ lower(github.ref_name) }}"
          echo "Branch contains 'main': ${{ contains(github.ref_name, 'main') }}"
          echo "Branch starts with 'feature': ${{ startsWith(github.ref_name, 'feature/') }}"
          echo "=== Conditional Logic ==="
          echo "Environment type: ${{ github.ref_name == 'main' && 'production' || 'development' }}"
          echo "Runner type: ${{ runner.os == 'Linux' && 'unix' || 'other' }}"
          echo "Branch category: ${{ startsWith(github.ref_name, 'feature/') && 'feature' || 'stable' }}"